-#
-# Farinopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Farinopoly.
-#
-# Farinopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Farinopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Farinopoly.  If not, see <http://www.gnu.org/licenses/>.
-#

%h1 Listing contents
%table
  %tr
    %th
    %th
    %th
    %th
  - @contents.each do |content|
    %tr
      %td= content.key
      %td= link_to 'Show', content
      %td= link_to 'Edit', edit_content_path(content)
      %td= link_to 'Destroy', content, method: :delete, data: { confirm: 'Are you sure?' }
%br/
= link_to 'New Content', new_content_path
%hr
%h1 Statistiken
%h2 Anzahl Geschäftskunden
%p
  =LegalEntity.all.count
%h2 Anzahl Artikel von Geschäftskunden
%p
  = LegalEntity.all.collect {|u| u.articles.active }.flatten.count
- result = statistics_articles
%h2 Anzahl Privatkunden
%p
  =PrivateUser.all.count
%h2 Anzahl Artikel von Privatkunden
%p
  = PrivateUser.all.collect {|u| u.articles.active }.flatten.count
- result = statistics_articles
%hr
%h2 Insgesamt eingestellter Warenwert (ohne Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:sum]
%h2 Insgesamt eingestellter Warenwert (mit Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:sum_quantity]
%hr
%h2 Gesamtprovision für FN (ohne Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:provision]
%h2 Gesamtprovision für FN (mit Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:provision_quantity]

%h2 Provision durch als fair eingestufte Artikel (3% Provision, ohne Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:provision_by_fair]
%h2 Provision durch als fair eingestufte Artikel (3% Provision, mit Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:provision_by_fair_quantity]

%h2 Provision durch konventionelle Artikel (6% Provision, ohne Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:provision_by_conventional]
%h2 Provision durch konventionelle Artikel (6% Provision, mit Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:provision_by_conventional_quantity]
%hr
%h2 Gesamtspendenaufkommen (ohne Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:fair]
%h2 Gesamtspendenaufkommen (mit Artikelstückzahlen)
%p
  = humanized_money_with_symbol result[:fair_quantity]
%hr
%h2 Anteil von als fair eingestuften Artikeln in % im Vergleich zu sonstigen Artikeln (Artikelstückzahlen nicht berücksichtigt)
%p
  = result[:fair_part]*100
  = "%"
%h2 Anteil von als öko eingestuften Artikeln in % im Vergleich zu sonstigen Artikeln (Artikelstückzahlen nicht berücksichtigt)
%p
  = result[:eco_part]*100
  = "%"

%h2 Aufteilung nach Kategorien:
%ul
  - Category.sorted_roots.each do |c|
    %li
      = c.name
      = ":"
      = statistics_category(c)

%hr
%hr
- result_sold = statistics_sold_articles

%p
  %h2 Verkaufte Artikel (Anzahl ohne Stückzahlen)
  = result_sold[:amount_unique]
%p
  %h2 Verkaufte Artikel (Anzahl mit Stückzahlen)
  = result_sold[:amount_total]
%p
  %h2 Wert der verkauften Artikel
  = humanized_money_with_symbol result_sold[:sold_value]
%p
  %h2 Bisher eingenommene Gebühren
  = humanized_money_with_symbol result_sold[:sold_fee]
%p
  %h2 Bisher eingenommene Spenden (faires Prozent)
  = humanized_money_with_symbol result_sold[:sold_fair]
